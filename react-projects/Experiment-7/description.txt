Experiment 7 : ProductCard Component Using Props

In this experiment, I created a reusable React component called ProductCard to display product details using props.
This helped me understand how to pass and render dynamic data in React components.

In the JSX,
I defined a ProductCard component that receives product details (name, price, and stock status) as props. 
The App component maintains an array of product objects and uses the map function to render a ProductCard for each product, 
passing the product data as props. This demonstrates how the same component can be reused for different data without changing its code.

In the CSS,
I styled the ProductCard with a border, rounded corners, padding, and a subtle box-shadow to make it look like a card. 
The products are displayed in a flex container with spacing between them. The header is centered for a clean layout.

In the JavaScript (React),
I used props to pass product data from the parent (App) to the ProductCard component. Inside ProductCard, the product name, price, 
and stock status are displayed dynamically based on the received props. The stock status is shown as "In Stock" or "Out of Stock" depending on the boolean value.

So basically, the whole logic works like this:
- The App component holds an array of products.
- It maps over the array and renders a ProductCard for each product, passing the data as props.
- ProductCard displays the product's name, price, and stock status in a styled card.

Overall, this experiment helped me understand how to create reusable components in React, how to use props for dynamic rendering, and how to style components for a consistent UI.